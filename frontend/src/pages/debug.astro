---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import ApiTestsTable from '../components/ApiTestsTable.svelte';
import TableCard from '../components/TableCard.astro';
import StatusCard from '../components/StatusCard.astro';
import SponsorCard from '../components/SponsorCard.astro';

// Fetch live backend data during SSR
let backendData = null;
let backendError = null;

// Determine the correct API base URL based on environment
const apiBaseUrl = import.meta.env.SSR ? 'http://backend:8000' : '';
const apiUrl = `${apiBaseUrl}/api/debug`;

try {
  const response = await fetch(apiUrl);
  if (response.ok) {
    backendData = await response.json();
  } else {
    backendError = `HTTP ${response.status}: ${response.statusText}`;
  }
} catch (error) {
  backendError = error.message;
}

// Get timestamp for freshness
const timestamp = new Date().toISOString();
---

<Layout title="Debug Dashboard">
  <Navigation currentPage="debug" />
  
  <main class="container">
    <section>
      <hgroup>
        <h1>Debug Dashboard</h1>
        <p>Updated: {new Date(timestamp).toLocaleTimeString()}</p>
      </hgroup>
    </section>

    {backendError ? (
      <section>
        <article>
          <h2>Backend Connection Failed</h2>
          <p>Cannot connect to backend API: <code>{backendError}</code></p>
          <p>This indicates a service connectivity issue.</p>
        </article>
      </section>
    ) : (
      <section class="debug-grid">
        <!-- Overall Status - Numbers-driven metrics -->
        <article>
          <header>
            <h2>System Status</h2>
          </header>
          <p><strong>Health:</strong> <code>{backendData.overall_health}</code></p>
          <p><strong>Integration:</strong> <code>{backendData.integration_metrics?.integration_score || 0}%</code></p>
          <p><strong>Credentials:</strong> <code>{backendData.integration_metrics?.credential_score || 0}%</code></p>
          <p><strong>Status:</strong> <code>{backendData.integration_metrics?.overall_status || 'unknown'}</code></p>
          <p><strong>Demo Ready:</strong> <ins>{backendData.demo_ready?.ready ? 'Yes' : 'No'}</ins></p>
        </article>

        <!-- Integration Metrics - Detailed breakdown -->
        <article>
          <header>
            <h2>Integration Metrics</h2>
          </header>
          {backendData.integration_metrics && (
            <>
              <p><strong>Vendors:</strong> 
                {backendData.integration_metrics.vendor_breakdown.fully_integrated} fully integrated, 
                {backendData.integration_metrics.vendor_breakdown.partially_integrated} partial, 
                {backendData.integration_metrics.vendor_breakdown.mock_only} mock only
              </p>
              <p><strong>Credentials:</strong> 
                {backendData.integration_metrics.credential_breakdown.available}/{backendData.integration_metrics.credential_breakdown.total_required} available
                {backendData.integration_metrics.credential_breakdown.missing > 0 && (
                  <small> ({backendData.integration_metrics.credential_breakdown.missing} missing)</small>
                )}
              </p>
              <p><strong>Overall Score:</strong> 
                <code>{Math.round((backendData.integration_metrics.integration_score + backendData.integration_metrics.credential_score) / 2)}%</code>
                <small> (avg of integration + credentials)</small>
              </p>
              
              {/* Display specific missing details */}
              {backendData.integration_metrics.missing_details && (
                <details>
                  <summary><strong>What's Missing?</strong></summary>
                  <div style="margin-top: 0.75rem;">
                    {backendData.integration_metrics.missing_details.missing_credentials?.length > 0 && (
                      <div style="margin-bottom: 1rem;">
                        <strong>Missing Credentials:</strong>
                        <ul style="margin: 0.5rem 0; padding-left: 1.5rem;">
                          {backendData.integration_metrics.missing_details.missing_credentials.map(cred => (
                            <li><code>{cred.env_var}</code> - {cred.description}</li>
                          ))}
                        </ul>
                      </div>
                    )}
                    
                    {backendData.integration_metrics.missing_details.partially_integrated?.length > 0 && (
                      <div style="margin-bottom: 1rem;">
                        <strong>Partially Integrated:</strong>
                        <ul style="margin: 0.5rem 0; padding-left: 1.5rem;">
                          {backendData.integration_metrics.missing_details.partially_integrated.map(vendor => (
                            <li><strong>{vendor.vendor}</strong>: {vendor.reason}</li>
                          ))}
                        </ul>
                      </div>
                    )}
                    
                    {backendData.integration_metrics.missing_details.mock_only_vendors?.length > 0 && (
                      <div>
                        <strong>Mock Only:</strong>
                        <ul style="margin: 0.5rem 0; padding-left: 1.5rem;">
                          {backendData.integration_metrics.missing_details.mock_only_vendors.map(vendor => (
                            <li><strong>{vendor.vendor}</strong>: {vendor.reason}</li>
                          ))}
                        </ul>
                      </div>
                    )}
                  </div>
                </details>
              )}
            </>
          )}
        </article>

        <!-- Services - Card with better status indicators -->
        <article>
          <header>
            <h2>Services</h2>
          </header>
          {backendData.services && Object.entries(backendData.services).map(([name, service]) => (
            <p>
              <span class={`status-dot ${service.status}`}></span>
              <strong>{service.name}</strong>
              <small>({service.status})</small>
              {service.response_time && (
                <small> • {Math.round(service.response_time * 1000)}ms</small>
              )}
              {service.error && (
                <br><mark>Error: {service.error}</mark>
              )}
            </p>
          ))}
        </article>

        <!-- Credential Status - List style to match sections above -->
        <article class="full-width">
          <header>
            <h2>Credential Status</h2>
          </header>
          {backendData.vendors && Object.entries(backendData.vendors)
            .filter(([name, vendor]) => !vendor.sponsor)
            .map(([name, vendor]) => (
              <p>
                <span class={`status-dot ${vendor.has_credentials ? 'healthy' : 'unhealthy'}`}></span>
                <strong>{vendor.name}</strong>
                <small>({vendor.type.replace('_', ' ')})</small>
                {vendor.has_credentials ? <ins> • Ready</ins> : <del> • No Credentials</del>}
                {vendor.credential_source && vendor.credential_source !== 'none' && (
                  <small> • {vendor.credential_source === 'host_env' ? 'Host Environment' : 
                            vendor.credential_source === 'env_file' ? 'Environment File' : vendor.credential_source}</small>
                )}
                {vendor.security_warning && (
                  <br><mark>⚠️ {vendor.security_warning}</mark>
                )}
              </p>
            ))}
        </article>
      </section>
    )}

    <!-- Sponsor Partnerships - Full-width showcase -->
    {backendData && backendData.vendors && Object.entries(backendData.vendors).filter(([name, vendor]) => vendor.sponsor).length > 0 && (
      <section class="sponsor-section">
        <header>
          <h2>Sponsor Partnerships</h2>
          <p><small>Trusted integrations and strategic technology partnerships</small></p>
        </header>
        <div class="sponsor-showcase">
          {Object.entries(backendData.vendors)
            .filter(([name, vendor]) => vendor.sponsor)
            .map(([name, vendor]) => (
              <SponsorCard vendor={vendor} />
            ))}
        </div>
      </section>
    )}

    <!-- API Tests -->
    <section>
      <ApiTestsTable client:load />
    </section>

    <!-- Raw Data -->
    <section>
      <details>
        <summary>Raw Backend Data</summary>
        <pre><code>{backendData ? JSON.stringify(backendData, null, 2) : `Error: ${backendError}`}</code></pre>
      </details>
    </section>
  </main>

  <style>
    .debug-grid {
      display: grid;
      grid-template-columns: repeat(2, 1fr);
      gap: var(--pico-grid-column-gap);
    }

    .debug-grid .full-width {
      grid-column: 1 / -1;
    }

    /* Sponsor Partnerships Section */
    .sponsor-section {
      background: rgba(139, 92, 246, 0.02);
      border: 1px solid rgba(139, 92, 246, 0.1);
      border-radius: var(--pico-border-radius);
      padding: calc(var(--pico-spacing) * 2);
      margin: calc(var(--pico-spacing) * 3) 0;
    }
    
    .sponsor-section header {
      margin-bottom: calc(var(--pico-spacing) * 2);
      text-align: center;
    }
    
    .sponsor-section header h2 {
      margin-bottom: calc(var(--pico-spacing) * 0.5);
      color: #6d28d9;
      font-size: 1.75rem;
    }
    
    .sponsor-showcase {
      display: flex;
      flex-direction: column;
      gap: calc(var(--pico-spacing) * 2);
    }
    
    /* Full-width Sponsor Cards */
    .sponsor-card {
      background: white;
      border: 2px solid rgba(139, 92, 246, 0.15);
      border-radius: var(--pico-border-radius);
      box-shadow: 0 4px 16px rgba(139, 92, 246, 0.08);
      transition: all 0.2s ease;
    }
    
    .sponsor-card:hover {
      border-color: rgba(139, 92, 246, 0.3);
      box-shadow: 0 8px 24px rgba(139, 92, 246, 0.12);
    }
    
    .sponsor-card-layout {
      display: grid;
      grid-template-columns: 280px 1fr;
      gap: calc(var(--pico-spacing) * 2);
      padding: calc(var(--pico-spacing) * 2);
    }
    
    /* Left: Identity & Status */
    .sponsor-identity {
      border-right: 1px solid rgba(139, 92, 246, 0.1);
      padding-right: calc(var(--pico-spacing) * 2);
    }
    
    .sponsor-identity header {
      margin-bottom: calc(var(--pico-spacing) * 1.5);
    }
    
    .sponsor-identity h3 {
      margin: 0 0 calc(var(--pico-spacing) * 0.5) 0;
      font-size: 1.5rem;
      color: #6d28d9;
      font-weight: 700;
    }
    
    .sponsor-identity hgroup p {
      margin: 0;
      font-size: 0.875rem;
      font-weight: 600;
    }
    
    .sponsor-category {
      margin-top: calc(var(--pico-spacing) * 0.75);
      padding: calc(var(--pico-spacing) * 0.5) 0;
      border-top: 1px solid rgba(139, 92, 246, 0.1);
    }
    
    .sponsor-status p {
      margin: calc(var(--pico-spacing) * 0.5) 0;
      font-size: 0.875rem;
    }
    
    .integration-status {
      font-weight: 600;
      color: var(--pico-ins-color);
    }
    
    /* Right: Content & Capabilities */
    .sponsor-content {
      display: flex;
      flex-direction: column;
      gap: calc(var(--pico-spacing) * 1.5);
    }
    
    .sponsor-description p {
      margin: 0;
      font-size: 1.1rem;
      line-height: 1.6;
      color: var(--pico-color);
    }
    
    .sponsor-capabilities h4 {
      margin: 0 0 calc(var(--pico-spacing) * 1) 0;
      font-size: 1rem;
      font-weight: 600;
      color: #6d28d9;
      text-transform: uppercase;
      letter-spacing: 0.025em;
    }
    
    .capabilities-list {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(240px, 1fr));
      gap: calc(var(--pico-spacing) * 1);
    }
    
    .capability-item {
      padding: calc(var(--pico-spacing) * 0.75);
      background: rgba(139, 92, 246, 0.05);
      border: 1px solid rgba(139, 92, 246, 0.1);
      border-radius: calc(var(--pico-border-radius) * 0.5);
      display: flex;
      flex-direction: column;
      gap: calc(var(--pico-spacing) * 0.25);
    }
    
    .capability-item strong {
      font-size: 0.875rem;
      color: #6d28d9;
      font-weight: 600;
    }
    
    .capability-item span {
      font-size: 0.825rem;
      color: var(--pico-muted-color);
      line-height: 1.4;
    }

    .status-dot {
      width: 12px;
      height: 12px;
      border-radius: 50%;
      background: var(--pico-primary);
      display: inline-block;
      margin-right: 0.75rem;
      margin-top: 0.125rem;
      vertical-align: top;
      flex-shrink: 0;
      box-shadow: 0 0 0 2px rgba(0,0,0,0.1);
    }

    .status-dot.healthy { 
      background: var(--pico-ins-color);
    }
    
    .status-dot.unhealthy { 
      background: var(--pico-del-color);
    }
    
    .status-dot.degraded { 
      background: #f59e0b;
    }

    .status-text {
      font-weight: 600;
      text-transform: capitalize;
    }

    .secure {
      color: var(--pico-ins-color);
    }

    .insecure {
      color: var(--pico-del-color);
    }

    /* Consistent section spacing */
    main > section {
      margin-bottom: calc(var(--pico-spacing) * 2);
    }
    
    main > section:last-child {
      margin-bottom: 0;
    }
    
    .debug-grid {
      margin-bottom: calc(var(--pico-spacing) * 1.5);
    }
    
    .debug-grid article {
      background: var(--pico-card-background-color);
      border: 1px solid var(--pico-border-color);
      padding: calc(var(--pico-spacing) * 1.25);
    }
    
    /* Typography hierarchy */
    .debug-grid article h2 {
      margin-bottom: calc(var(--pico-spacing) * 0.75);
      font-size: 1.25rem;
    }
    
    main h2 {
      margin-bottom: calc(var(--pico-spacing) * 1);
      font-size: 1.5rem;
    }

    /* Mobile and tablet: single column */
    @media (max-width: 768px) {
      .debug-grid {
        grid-template-columns: 1fr;
      }
      
      .debug-grid .full-width {
        grid-column: 1;
      }
      
      main > section {
        margin-bottom: calc(var(--pico-spacing) * 1.5);
      }
      
      /* Mobile sponsor cards */
      .sponsor-section {
        padding: calc(var(--pico-spacing) * 1.5);
        margin: calc(var(--pico-spacing) * 2) 0;
      }
      
      .sponsor-card-layout {
        grid-template-columns: 1fr;
        gap: calc(var(--pico-spacing) * 1.5);
        padding: calc(var(--pico-spacing) * 1.5);
      }
      
      .sponsor-identity {
        border-right: none;
        border-bottom: 1px solid rgba(139, 92, 246, 0.1);
        padding-right: 0;
        padding-bottom: calc(var(--pico-spacing) * 1.5);
      }
      
      .sponsor-identity h3 {
        font-size: 1.25rem;
      }
      
      .sponsor-description p {
        font-size: 1rem;
      }
      
      .capabilities-list {
        grid-template-columns: 1fr;
      }
    }

    /* Desktop: multi-column layouts */
    @media (min-width: 769px) {
      .debug-grid {
        grid-template-columns: repeat(2, 1fr);
      }
      
      .debug-grid .full-width {
        grid-column: 1 / -1;
      }
    }
  </style>

</Layout>