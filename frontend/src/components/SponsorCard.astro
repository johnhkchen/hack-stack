---
export interface Props {
  vendor: {
    name: string;
    type: string;
    sponsor_info?: {
      description?: string;
      category?: string;
      integration_level?: string;
    };
    integration_status?: string;
    features?: Array<{name: string; description: string; status?: string}>;
    has_credentials: boolean;
    credential_source?: string;
    is_secure?: boolean;
    security_warning?: string;
  };
  class?: string;
}

const { vendor, class: className } = Astro.props;
---

<article class={`sponsor-card ${className || ''}`}>
  <div class="sponsor-card-layout">
    <!-- Left: Sponsor Identity & Status -->
    <div class="sponsor-identity">
      <header>
        <hgroup>
          <h3>{vendor.name}</h3>
          <p><ins>Sponsor Partnership</ins></p>
        </hgroup>
        <p class="sponsor-category">
          <small>{vendor.sponsor_info?.category || vendor.type.replace('_', ' ')}</small>
        </p>
      </header>
      
      <div class="sponsor-status">
        <p class="integration-status">
          {vendor.integration_status === 'fully_integrated' ? '✅ Fully Integrated' :
           vendor.integration_status === 'partial_live' ? '🟡 Partially Integrated (Live)' :
           vendor.integration_status === 'partial_mock_missing_keys' ? '🟠 Partial Integration (Missing API Keys)' :
           vendor.integration_status === 'partial_mock_dependencies' ? '🟠 Partial Integration (Mock Mode)' :
           vendor.integration_status === 'credentials_ready_untested' ? '🔑 Credentials Ready (Untested)' :
           vendor.integration_status === 'partial_mock_missing_url' ? '🟡 Missing Weaviate URL' :
           vendor.integration_status === 'partial_mock_missing_key' ? '🟡 Missing API Key' :
           vendor.integration_status === 'mock_missing_all' ? '🎭 Mock Mode (No Credentials)' :
           vendor.integration_status === 'credentials_only' ? '🔑 Credentials Only' :
           vendor.integration_status === 'mock_only' ? '🎭 Mock Mode Only' :
           vendor.integration_status === 'integration_unknown' ? '❓ Status Unknown' :
           vendor.sponsor_info?.integration_level === 'production_ready' ? '🚀 Production Ready' :
           vendor.has_credentials ? '✓ Credentials Ready' : '◉ Ready for Integration'}
        </p>
        {vendor.credential_source && vendor.credential_source !== 'none' && (
          <p class="credential-source">
            <small>
              {vendor.credential_source === 'host_env' ? 'Host Environment' : 
               vendor.credential_source === 'env_file' ? 'Environment File' : vendor.credential_source}
            </small>
          </p>
        )}
        {vendor.security_warning && (
          <p class="security-warning">
            <mark>⚠️ {vendor.security_warning}</mark>
          </p>
        )}
        {vendor.status_details && vendor.status_details.mode === 'mock' && (
          <p class="status-details">
            <small>🎭 Running in mock mode with sample data</small>
          </p>
        )}
        {vendor.status_details?.api_keys_detected && (
          <p class="api-status">
            <small>
              API Keys: 
              {vendor.status_details.api_keys_detected.llama_cloud ? '✓ LlamaCloud' : '✗ LlamaCloud'} • 
              {vendor.status_details.api_keys_detected.openai ? '✓ OpenAI' : '✗ OpenAI'}
            </small>
          </p>
        )}
        {vendor.status_details?.credentials_detected && (
          <p class="credentials-status">
            <small>
              Weaviate: 
              {vendor.status_details.credentials_detected.weaviate_url ? '✓ URL' : '✗ URL'} • 
              {vendor.status_details.credentials_detected.weaviate_api_key ? '✓ API Key' : '✗ API Key'}
            </small>
          </p>
        )}
        {vendor.status_details?.integration_notes && (
          <p class="integration-notes">
            <small>💡 {vendor.status_details.integration_notes}</small>
          </p>
        )}
      </div>
    </div>

    <!-- Right: Content & Capabilities -->
    <div class="sponsor-content">
      <div class="sponsor-description">
        <p>{vendor.sponsor_info?.description || 'Advanced integration capabilities'}</p>
      </div>
      
      {vendor.features && vendor.features.length > 0 && (
        <div class="sponsor-capabilities">
          <h4>Key Capabilities</h4>
          <div class="capabilities-list">
            {vendor.features.slice(0, 6).map(feature => (
              <div class="capability-item">
                <strong>{feature.name}</strong>
                <span>{feature.description}</span>
              </div>
            ))}
          </div>
        </div>
      )}
    </div>
  </div>
</article>