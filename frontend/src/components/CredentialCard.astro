---
import Card from './Card.astro';

export interface Props {
  vendors: Record<string, {
    name: string;
    type: string;
    has_credentials: boolean;
    credential_source?: string;
    is_secure?: boolean;
    security_warning?: string;
    sponsor?: boolean;
  }>;
  class?: string;
}

const { vendors, class: className } = Astro.props;
const credentialVendors = Object.entries(vendors).filter(([name, vendor]) => !vendor.sponsor);
---

<Card class={className}>
  <header>
    <h2>Credential Status</h2>
  </header>
  
  {credentialVendors.map(([name, vendor]) => (
    <details>
      <summary>
        {vendor.has_credentials ? '✓' : '○'} {vendor.name}
        <small>({vendor.type.replace('_', ' ')})</small>
      </summary>
      <p>
        <strong>Status:</strong> 
        {vendor.has_credentials ? <ins>Ready</ins> : <del>No Credentials</del>}
      </p>
      {vendor.credential_source && vendor.credential_source !== 'none' && (
        <p>
          <strong>Source:</strong> 
          <small>
            {vendor.credential_source === 'host_env' ? 'Host Environment' : 
             vendor.credential_source === 'env_file' ? 'Environment File' : vendor.credential_source}
          </small>
          {vendor.is_secure ? <ins> (Secure)</ins> : <del> (Insecure)</del>}
        </p>
      )}
      {vendor.security_warning && (
        <p><mark>⚠️ {vendor.security_warning}</mark></p>
      )}
    </details>
  ))}
</Card>