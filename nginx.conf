# Production Nginx Configuration
# Routes frontend and API requests appropriately

events {
    worker_connections 1024;
}

http {
    # Modern HTTP settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Upstream services with resolver for dynamic service discovery
    resolver 127.0.0.11 valid=30s;
    
    upstream frontend_service {
        server frontend:4321 max_fails=3 fail_timeout=30s;
    }
    
    upstream backend_service {
        server backend:8000 max_fails=3 fail_timeout=30s;
    }
    
    # Main server configuration
    server {
        listen 80;
        server_name localhost;
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # API routes to backend
        location /api/ {
            # Use variable for dynamic resolution
            set $backend_upstream http://backend:8000;
            proxy_pass $backend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API-specific settings
            proxy_read_timeout 60s;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            
            # Better error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @backend_fallback;
        }
        
        # Fallback for backend errors
        location @backend_fallback {
            add_header Content-Type application/json;
            return 503 '{"error": "Backend service temporarily unavailable", "status": 503}';
        }
        
        # Documentation route to backend
        location /docs {
            proxy_pass http://backend_service/docs;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # OpenAPI schema route to backend
        location /openapi.json {
            proxy_pass http://backend_service/openapi.json;
            proxy_set_header Host $host;
        }
        
        # Everything else to frontend (Astro)
        location / {
            # Use variable for dynamic resolution
            set $frontend_upstream http://frontend:4321;
            proxy_pass $frontend_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Frontend-specific settings
            proxy_read_timeout 30s;
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            
            # Enable hot reload in development
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Allow WebSocket connections for HMR
            proxy_http_version 1.1;
            
            # Better error handling
            proxy_intercept_errors on;
            error_page 502 503 504 = @frontend_fallback;
        }
        
        # Fallback for frontend errors
        location @frontend_fallback {
            add_header Content-Type text/html;
            return 503 '<html><body><h1>Frontend Service Unavailable</h1><p>The frontend service is temporarily unavailable. Please try again later.</p></body></html>';
        }
        
        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}